{"version":3,"sources":["Die.js","Dice.js","RuleRow.js","Rules.js","ScoreTable.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["Die","handleClick","evt","props","idx","this","locked","rolling","side","disabled","classes","iconClasses","clsx","die","dieLocked","dieRolling","dieDisabled","iconSize","width","icon","size","className","onClick","Component","withStyles","color","cursor","filter","transition","opacity","animation","transform","withWidth","Dice","dice","sides","Box","map","d","val","key","defaultProps","1","faDiceOne","2","faDiceTwo","3","faDiceThree","4","faDiceFour","5","faDiceFive","6","faDiceSix","display","justifyContent","marginBottom","RuleRow","rowClasses","name","score","doScore","descScores","bonusYahtzee","availableJoker","scoreNotUsed","undefined","leftCellClasses","cell","cellDisabled","rowActive","rowJoker","rowNotJoker","rowDisabled","TableRow","TableCell","align","background","backgroundSize","backgroundPosition","borderBottom","padding","fontWeight","fontSize","textDecoration","Rule","params","Object","assign","reduce","prev","curr","freqs","Map","set","get","Array","from","values","length","TotalOneNumber","evalRoll","count","SumDistro","freq","some","c","sum","FullHouse","SmallStraight","Set","has","LargeStraight","Yahtzee","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","scores","gameOver","bonusUpperPoints","bonusYahtzeePoints","totalScore","curHighScore","curTotal","getTotalScore","localStorage","setItem","getItem","highScore","setHighScore","upperBonusClasses","bonus","yahtzeeBonusClasses","totalScoreClasses","component","scoreTable","px","scoreSection","Typography","variant","sectionTitle","Hidden","xsUp","Table","TableBody","PureComponent","backgroundColor","position","fontStyle","paddingTop","paddingBottom","textTransform","top","paddingLeft","Game","state","getInitialState","animateRoll","bind","roll","toggleLocked","checkForUpperBonus","checkIfOver","resetState","fill","rollsLeft","getsYahtzeeBonus","setState","setTimeout","st","i","Math","ceil","random","slice","rulename","ruleFn","ruleFnResult","includes","bonusUpperNotSet","upperScores","upperFilled","every","totalUpperScores","total","curScore","diceValues","v","number","allScoreNames","keys","scoreName","lowerNames","forEach","ls","s","buttonClasses","gameButton","gameButtonXS","Container","maxWidth","gameContainer","gameHeader","gameTitle","gameBonusTitle","Button","x","displayRollInfo","style","boxShadow","margin","fontFamily","backgroundImage","borderRadius","border","pointerEvents","theme","createMuiTheme","typography","h5","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.93edeb6d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport withWidth from '@material-ui/core/withWidth';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport clsx from 'clsx';\n\nconst styles = {\n\tdie: {\n\t\tcolor: \"white\",\n\t\tcursor: \"pointer\",\n\t\tfilter: \"drop-shadow(0 19px 10px rgba(0, 0, 0, 0.3)) drop-shadow(0 15px 10px rgba(0, 0, 0, 0.1))\",\n\t\ttransition: \"all 0.3s ease\",\n\t\t'&:hover': {\n\t\t\topacity: 0.8\n\t\t}\n\t},\n\tdieLocked: {\n\t\topacity: 0.5,\n  \tfilter: \"none\",\n  \t'&:hover': {\n  \t\topacity: 0.5\n  \t}\n\t},\n\tdieDisabled: {\n\t\tcursor: \"not-allowed\"\n\t},\n\tdieRolling: {\n\t\tanimation: \"$spin 1s ease-out\"\n\t},\n\t'@keyframes spin': {\n\t\t\"0%\": {\n\t\t\ttransform: \"rotate(0deg)\"\n\t\t},\n\t\t\"100%\": {\n\t\t\ttransform: \"rotate(360deg)\"\n\t\t}\n\t}\n}\n\nclass Die extends Component {\n\thandleClick = (evt) => {\n    this.props.handleClick(this.props.idx);\n  }\n\n\trender(){\n\t\tconst {locked, rolling, side, disabled, classes} = this.props;\n\t\tconst iconClasses = clsx(classes.die, { \n\t\t\t[classes.dieLocked]: locked,  \n\t\t\t[classes.dieRolling]: rolling, \n\t\t\t[classes.dieDisabled]: disabled \n\t\t});\n\n\t\tconst iconSize = this.props.width === 'xs' ? '3x' : '4x';\n\t\treturn (\n\t\t\t<FontAwesomeIcon \n\t\t\t\ticon={side} \n\t\t\t\tsize={iconSize}\n\t\t\t\tclassName={iconClasses}\n\t\t\t\tonClick={this.handleClick}\n\t\t\t\tdisabled={disabled}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(withWidth()(Die));","import React, { Component } from 'react';\nimport { Box } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Die from \"./Die.js\";\nimport { faDiceOne, faDiceTwo, faDiceThree, faDiceFour, faDiceFive, faDiceSix } from '@fortawesome/free-solid-svg-icons';\n\nconst styles = {\n\tdice: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"2rem\"\n\t}\n}\n\nclass Dice extends Component {\n\tstatic defaultProps = {\n\t\tsides: {\n\t\t\t1: faDiceOne,\n\t\t\t2: faDiceTwo,\n\t\t\t3: faDiceThree,\n\t\t\t4: faDiceFour,\n\t\t\t5: faDiceFive,\n\t\t\t6: faDiceSix\n\t\t}\n\t}\n\n\trender(){\n\t\tconst {classes, dice, sides, locked, disabled, rolling, handleClick} = this.props;\n\t\treturn (\n\t\t\t<Box className={classes.dice}>\n\t\t\t\t{dice.map((d, idx) =>\n\t        <Die \n\t        \thandleClick={handleClick}\n\t          val={d}\n\t          side={sides[d]}\n\t          locked={locked[idx]}\n\t          disabled={disabled}\n\t          rolling={rolling && !locked[idx]}\n\t          idx={idx}\n\t          key={idx} \n\t        />\n      \t)}\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(Dice);","import React, { Component } from 'react';\nimport { TableRow, TableCell } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\n\nconst styles = {\n\trowActive: {\n\t\ttransition: \"all 0.2s\",\n\t\t'&:hover': {\n\t\t\tcursor: \"pointer\",\n\t\t\tbackground: \"rgba(239, 221, 171, 0.2)\",\n\t\t}\n\t},\n\trowDisabled: {\n\t\tbackground: \"linear-gradient(to right, rgba(224, 217, 197, 0.5) 0%, rgba(138, 113, 110, 0.3) 30%, rgba(224, 217, 197, 0.6) 40%)\",\n\t\tbackgroundSize: \"300% 300%\",\n\t\tanimation: \"$Slide 1s ease 1\",\n\t\t'&:hover': {\n\t\t\tcursor: \"not-allowed\"\n\t\t}\n\t},\n\t'@keyframes Slide': {\n\t\t\"0%\": {\n\t\t\tbackgroundPosition: \"100% 50%\"\n\t\t},\n\t\t\"100%\": {\n\t\t\tbackgroundPosition: \"0% 51%\"\n\t\t}\n\t},\n\trowJoker: {\n\t\tanimation: \"$Blink 1.5s ease infinite\",\n    '&:hover': {\n      background: \"rgba(148, 98, 91, 0.9)\"\n    }\n\t},\n  '@keyframes Blink': {\n    \"50%\": {\n      background: \"rgba(148, 98, 91, 0.6)\"\n    }\n  },\n\trowNotJoker: {\n    opacity: \"0.5\",\n    cursor: \"not-allowed\"\n\t},\n  cell: {\n    borderBottom: \"1px solid #c7b0ad\",\n    padding: \"0.15rem 0\",\n    fontWeight: 300,\n    fontSize: \"0.85rem\",\n    color: \"#3F5258\"\n  },\n  cellDisabled: {\n  \ttextDecoration: \"line-through\",\n  \tcolor: \"gray\"\n  }\n};\n\nclass RuleRow extends Component {\n  render() {\n  \tconst {classes, name, score, doScore, descScores, bonusYahtzee, availableJoker} = this.props;\n  \tconst scoreNotUsed = score === undefined;\n    const leftCellClasses = clsx(classes.cell, {[classes.cellDisabled]: !scoreNotUsed});\n  \tlet rowClasses;\n    if(scoreNotUsed) {\n      if(bonusYahtzee) {\n        //when bonus yahtzee highlight only those allowed to score\n        rowClasses = clsx({\n          [classes.rowActive]: availableJoker,\n          [classes.rowJoker]: availableJoker,\n          [classes.rowNotJoker]: !availableJoker\n        });\n      }\n      else { \n        rowClasses = clsx(classes.rowActive); \n      }\n    }\n    else { rowClasses = clsx(classes.rowDisabled); }\n    return (\n      <TableRow className={rowClasses} onClick={doScore}>\n        <TableCell align=\"left\" className={leftCellClasses}>{name}</TableCell>\n        <TableCell align=\"right\" className={classes.cell}>{scoreNotUsed ? descScores : score}</TableCell>\n      </TableRow>\n    )\n  }\n}\n\nexport default withStyles(styles)(RuleRow);","/** Rule for Yahtzee scoring.\n *\n * This is an \"abstract class\"; the real rules are subclasses of these.\n * This stores all parameters passed into it as properties on the instance\n * (to simplify child classes so they don't need constructors of their own).\n *\n * It contains useful functions for summing, counting values, and counting\n * frequencies of dice. These are used by subclassed rules.\n */\n\nclass Rule {\n  constructor(params) {\n    // put all properties in params on instance\n    Object.assign(this, params);\n  }\n\n  sum(dice) {\n    // sum of all dice\n    return dice.reduce((prev, curr) => prev + curr);\n  }\n\n  freq(dice) {\n    // frequencies of dice values\n    const freqs = new Map();\n    for (let d of dice) freqs.set(d, (freqs.get(d) || 0) + 1);\n    return Array.from(freqs.values());\n  }\n\n  count(dice, val) {\n    // # times val appears in dice\n    return dice.filter(d => d === val).length;\n  }\n}\n\n/** Given a sought-for val, return sum of dice of that val.\n *\n * Used for rules like \"sum of all ones\"\n */\n\nclass TotalOneNumber extends Rule {\n  evalRoll = dice => {\n    return this.val * this.count(dice, this.val);\n  };\n}\n\n/** Given a required # of same dice, return sum of all dice.\n *\n * Used for rules like \"sum of all dice when there is a 3-of-kind\"\n */\n\nclass SumDistro extends Rule {\n  evalRoll = dice => {\n    // do any of the counts meet or exceed this distro?\n    return this.freq(dice).some(c => c >= this.count) ? this.sum(dice) : 0;\n  };\n}\n\n/** Check if full house (3-of-kind and 2-of-kind) \n * Also bonus yahtzee gets full score\n*/\n\nclass FullHouse extends Rule {\n  evalRoll = (dice, bonusYahtzee) => {\n    if (!bonusYahtzee) {\n      return this.freq(dice).some(c => c === 3) && this.freq(dice).some(c => c === 2) ? this.score : 0;\n    } \n    else {\n      return this.score;\n    }\n  }\n}\n\n/** Check for small straights. \n * Also bonus yahtzee gets full score\n*/\n\nclass SmallStraight extends Rule {\n  evalRoll = (dice, bonusYahtzee) => {\n    if (!bonusYahtzee) {\n      const d = new Set(dice);\n      return (\n        (d.size === 5 && (!d.has(1) || !d.has(6))) \n        || (d.size === 4 && (!d.has(5) && !d.has(6))) \n        || (d.size === 4 && (!d.has(1) && !d.has(6))) \n        || (d.size === 4 && (!d.has(1) && !d.has(2)))\n      ) ? this.score : 0;\n    }\n    else {\n      return this.score;     \n    }\n  };\n}\n\n/** Check for large straights. \n * Also bonus yahtzee gets full score\n*/\n\nclass LargeStraight extends Rule {\n  evalRoll = (dice, bonusYahtzee) => {\n    if (!bonusYahtzee) {\n      const d = new Set(dice);\n      // large straight must be 5 different dice & only one can be a 1 or a 6\n      return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\n    }\n    else {\n      return this.score;\n    }\n  };\n}\n\n/** Check if all dice are same. */\n\nclass Yahtzee extends Rule {\n  evalRoll = dice => {\n    // all dice must be the same\n    return this.freq(dice)[0] === 5 ? this.score : 0;\n  };\n}\n\n// ones, twos, etc score as sum of that value\nconst ones = new TotalOneNumber({ val: 1 });\nconst twos = new TotalOneNumber({ val: 2 });\nconst threes = new TotalOneNumber({ val: 3 });\nconst fours = new TotalOneNumber({ val: 4 });\nconst fives = new TotalOneNumber({ val: 5 });\nconst sixes = new TotalOneNumber({ val: 6 });\n\n// three/four of kind score as sum of all dice\nconst threeOfKind = new SumDistro({ count: 3 });\nconst fourOfKind = new SumDistro({ count: 4 });\n\n// full house scores as flat 25\nconst fullHouse = new FullHouse({ score: 25 });\n\n// small/large straights score as 30/40\nconst smallStraight = new SmallStraight({ score: 30 });\nconst largeStraight = new LargeStraight({ score: 40 });\n\n// yahtzee scores as 50\nconst yahtzee = new Yahtzee({ score: 50 });\n\n// for chance, can view as sum of all dice, requiring at least 0 of a kind\nconst chance = new SumDistro({ count: 0 });\n\nexport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance\n};","import React, { PureComponent } from 'react';\nimport { Box, Typography, Table, TableBody, Hidden } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport RuleRow from \"./RuleRow\";\nimport { ones, twos, threes, fours, fives, sixes, threeOfKind, fourOfKind, fullHouse, smallStraight, largeStraight, yahtzee, chance } from './Rules';\nimport clsx from 'clsx';\nimport \"./animations.css\";\n\nconst styles = {\n  scoreTable: {\n    backgroundColor: \"white\",\n  },\n  scoreSection: {\n    position: \"relative\",\n  },\n  sectionTitle: {\n  \tpadding: \"1rem 0\",\n  \tcolor: \"#485570\",\n  },\n  totalScore: {\n  \tpadding: \"1rem 0 0\",\n  \tdisplay: \"inline-block\",\n  \tborderBottom: \"1px solid darkgray\",\n  \tcolor: \"#95625A\",\n    fontStyle: \"normal\",\n  },\n  highScore: {\n  \tpaddingTop: \"0.3rem\",\n  \tpaddingBottom: \"1.2rem\",\n  \tfontWeight: 300,\n  \tfontStyle: \"italic\",\n  \ttextTransform: \"uppercase\",\n  \tcolor: \"#737F7C\",\n  \tfontSize: \"1.1rem\"\n  },\n  bonus: {\n    position: \"absolute\",\n    display: \"inline\",\n    top: \"1.05rem\",\n    paddingLeft: \"4rem\",\n    color: \"gray\",\n    opacity: 0.8,\n  }\n};\n\nclass ScoreTable extends PureComponent {\n\tstatic defaultProps = {\n    descScores: {\n      ones: \"1 point per 1\",\n      twos: \"2 points per 2\",\n      threes: \"3 points per 3\",\n      fours: \"4 points per 4\",\n      fives: \"5 points per 5\",\n      sixes: \"6 points per 6\",\n      threeOfKind: \"Sum all dice if 3 are the same\",\n      fourOfKind: \"Sum all dice if 4 are the same\",\n      fullHouse: \"25 points for a full house\",\n      smallStraight: \"30 points for a small straight\",\n      largeStraight: \"40 points for a large straight\",\n      yahtzee: \"50 points for yahtzee\",\n      chance: \"Sum of all dice\",\n    }\n  }\n\n  getTotalScore(){\n    const {scores, gameOver, bonusUpperPoints, bonusYahtzeePoints} = this.props;\n    let totalScore = 0;\n    for(let key in scores){\n      if(scores[key]) totalScore += scores[key];\n    }\n    return gameOver ? (totalScore + bonusUpperPoints + bonusYahtzeePoints) : totalScore;\n  }\n\n  setHighScore(curHighScore) {\n    const curTotal = this.getTotalScore();\n    if(curTotal > curHighScore) {\n      localStorage.setItem(\"highScore\", curTotal);\n      return curTotal;\n    }\n    else { return curHighScore; }\n  }\n\n\trender(){\n\t\tconst { classes, descScores, scores, doScore, gameOver, bonusUpperPoints, bonusYahtzee, availableJoker, bonusYahtzeePoints } = this.props;\n\n    const curHighScore = localStorage.getItem(\"highScore\");\n    const highScore = gameOver ? this.setHighScore(curHighScore) : curHighScore ;\n    //additional classes/animations from animations.css file\n    const upperBonusClasses = clsx(classes.bonus, \"bounceIn\", { \"dropUpper\": gameOver });\n    const yahtzeeBonusClasses = clsx(classes.bonus, \"bounceIn\", { \"dropLower\": gameOver });\n    const totalScoreClasses = clsx(classes.totalScore, { \"pulsateTotalScore\": gameOver });\n\t\treturn(\n      <Box component=\"main\" className={classes.scoreTable}>\n        <Box component=\"section\" px=\"1rem\" className={classes.scoreSection}>\n          <Typography variant=\"h5\" className={classes.sectionTitle}>Upper</Typography>\n          <Hidden xsUp={!bonusUpperPoints} >\n            <Typography variant=\"h5\" className={upperBonusClasses}>+{bonusUpperPoints}</Typography>\n          </Hidden>\n\t        <Table padding=\"none\">\n\t          <TableBody>\n\t            <RuleRow \n                name=\"Ones\" \n                score={scores.ones} \n                doScore={evt => doScore(\"ones\", ones.evalRoll)} \n                descScores={descScores.ones} \n                bonusYahtzee={bonusYahtzee} \n                availableJoker={availableJoker.ones} \n              />\n\t            <RuleRow \n                name=\"Twos\" \n                score={scores.twos} \n                doScore={evt => doScore(\"twos\", twos.evalRoll)} \n                descScores={descScores.twos} bonusYahtzee={bonusYahtzee} \n                availableJoker={availableJoker.twos} \n              />\n\t            <RuleRow \n                name=\"Threes\" \n                score={scores.threes} \n                doScore={evt => doScore(\"threes\", threes.evalRoll)} \n                descScores={descScores.threes} \n                bonusYahtzee={bonusYahtzee} \n                availableJoker={availableJoker.threes} \n              />\n\t            <RuleRow \n                name=\"Fours\" \n                score={scores.fours} \n                doScore={evt => doScore(\"fours\", fours.evalRoll)} \n                descScores={descScores.fours} \n                bonusYahtzee={bonusYahtzee} \n                availableJoker={availableJoker.fours} \n              />\n\t            <RuleRow \n                name=\"Fives\" \n                score={scores.fives} \n                doScore={evt => doScore(\"fives\", fives.evalRoll)} \n                descScores={descScores.fives} \n                bonusYahtzee={bonusYahtzee} \n                availableJoker={availableJoker.fives} \n              />\n\t            <RuleRow \n                name=\"Sixes\" \n                score={scores.sixes} \n                doScore={evt => doScore(\"sixes\", sixes.evalRoll)} \n                descScores={descScores.sixes} \n                bonusYahtzee={bonusYahtzee} \n                availableJoker={availableJoker.sixes} \n              />\n\t          </TableBody>\n\t        </Table>\n        </Box>\n        <Box component=\"section\" px=\"1rem\" className={classes.scoreSection}>\n        \t<Typography variant=\"h5\" className={classes.sectionTitle}>Lower</Typography>\n          <Hidden xsUp={!bonusYahtzeePoints} >\n            <Typography variant=\"h5\" className={yahtzeeBonusClasses}>+{bonusYahtzeePoints}</Typography>\n          </Hidden>\n        \t<Table padding=\"none\">\n        \t\t<TableBody>\n        \t\t  <RuleRow \n                name=\"Three of Kind\" \n                score={scores.threeOfKind} \n                doScore={evt => doScore(\"threeOfKind\", threeOfKind.evalRoll)} \n                descScores={descScores.threeOfKind} \n                bonusYahtzee={bonusYahtzee} \n                availableJoker={availableJoker.threeOfKind} \n              />\n              <RuleRow \n                name=\"Four of Kind\" \n                score={scores.fourOfKind} \n                doScore={evt => doScore(\"fourOfKind\", fourOfKind.evalRoll)} \n                descScores={descScores.fourOfKind} \n                bonusYahtzee={bonusYahtzee} \n                availableJoker={availableJoker.fourOfKind} \n              />\n              <RuleRow \n                name=\"Full House\" \n                score={scores.fullHouse} \n                doScore={evt => doScore(\"fullHouse\", fullHouse.evalRoll)} \n                descScores={descScores.fullHouse} \n                bonusYahtzee={bonusYahtzee} \n                availableJoker={availableJoker.fullHouse} \n              />\n              <RuleRow \n                name=\"Small Straight\" \n                score={scores.smallStraight} \n                doScore={evt => doScore(\"smallStraight\", smallStraight.evalRoll)} \n                descScores={descScores.smallStraight} \n                bonusYahtzee={bonusYahtzee} \n                availableJoker={availableJoker.smallStraight} \n              />\n              <RuleRow \n                name=\"Large Straight\" \n                score={scores.largeStraight} \n                doScore={evt => doScore(\"largeStraight\", largeStraight.evalRoll)} \n                descScores={descScores.largeStraight} \n                bonusYahtzee={bonusYahtzee} \n                availableJoker={availableJoker.largeStraight} \n              />\n              <RuleRow \n                name=\"Yahtzee\" \n                score={scores.yahtzee} \n                doScore={evt => doScore(\"yahtzee\", yahtzee.evalRoll)} \n                descScores={descScores.yahtzee} \n                bonusYahtzee={bonusYahtzee} \n                availableJoker={availableJoker.yahtzee} \n              />\n              <RuleRow \n                name=\"Chance\" \n                score={scores.chance} \n                doScore={evt => doScore(\"chance\", chance.evalRoll)} \n                descScores={descScores.chance} \n                bonusYahtzee={bonusYahtzee} \n                availableJoker={availableJoker.chance} \n              />\n        \t\t</TableBody>\n        \t</Table>\n        </Box>\n        <Typography variant=\"h5\" className={totalScoreClasses}>TOTAL SCORE: {this.getTotalScore()}</Typography>\n        <Typography variant=\"h6\" className={classes.highScore}>High Score: {highScore}</Typography>\n      </Box>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(ScoreTable);","import React, { Component } from 'react';\nimport { Container, Box, Typography, Button, Hidden } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport withWidth from '@material-ui/core/withWidth';\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport clsx from 'clsx';\nimport \"./animations.css\";\n\nconst styles = {\n  gameContainer: {\n    boxShadow: \"0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.1)\",\n    padding: 0,\n    margin: \"auto\"\n  },\n  gameHeader: {\n    background: \"linear-gradient(45deg, #ab4f44, #737F7C)\",\n    backgroundSize: \"150% 150%\",\n  },\n  gameTitle: {\n    color: \"white\",\n    fontWeight: 100,\n    padding: \"1rem 0\"\n  },\n  gameBonusTitle: {\n    color: \"white\",\n    padding: \"1rem 0\",\n    fontFamily: \"Arial, sans-serif\",\n    fontStyle: \"bold\"\n  },\n  gameButton: {\n    padding: 0,\n    fontSize: \"1.5em\",\n    color: \"#95625A\",\n    fontWeight: 300,\n    transition: \"0.5s\",\n    backgroundSize: \"200% auto\",\n    boxShadow: \"0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.1)\",\n    backgroundImage: \"linear-gradient(to right, #ffffff 0%, #c9b4b1 51%, #ffffff 100%)\",\n    borderRadius: \"0.5rem\",\n    border: \"none\",\n    width: \"50%\",\n    marginBottom: \"2rem\",\n    textTransform: \"none\",\n    '&:hover': {\n      cursor: \"pointer\",\n      backgroundPosition: \"right center\"\n    },\n    '&:disabled': {\n      color: \"darkgray\",\n      cursor: \"not-allowed\",\n      opacity: 0.5,\n      pointerEvents: \"auto\",\n    }\n  },\n  gameButtonXS: {\n  \twidth: \"65%\",\n  \tfontSize: \"1.2em\"\n  }\n};\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = this.getInitialState();\n\n\t\tthis.animateRoll = this.animateRoll.bind(this);\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n    this.toggleLocked = this.toggleLocked.bind(this);\n    this.checkForUpperBonus = this.checkForUpperBonus.bind(this);\n    this.bonusYahtzee = this.bonusYahtzee.bind(this);\n    this.checkIfOver = this.checkIfOver.bind(this);\n    this.resetState = this.resetState.bind(this);\n\t}\n\n\tgetInitialState(){\n    const initialState = {\n      dice: Array.from({ length: NUM_DICE }).map(d => 5),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      rolling: false,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      },\n      gameOver: false,\n      bonusUpperPoints: undefined,\n      bonusYahtzee: false,\n      getsYahtzeeBonus: false,\n      bonusYahtzeePoints: 0,\n      availableJoker: {\n        ones: false,\n        twos: false,\n        threes: false,\n        fours: false,\n        fives: false,\n        sixes: false,\n        threeOfKind: false,\n        fourOfKind: false,\n        fullHouse: false,\n        smallStraight: false,\n        largeStraight: false,\n        yahtzee: false,\n        chance: false\n      },\n    };\n    return initialState;\n  }\n\n  resetState(){\n    this.setState(this.getInitialState);\n    this.animateRoll();\n  }\n\n  componentDidMount(){\n    this.animateRoll();\n  }\n\n  animateRoll(){\n    this.setState({rolling: true}, () => {\n      setTimeout(this.roll, 1000);\n    });\n  }\n\n  roll(evt){\n    //roll unlocked dice and reset bonus yahtzee related states\n    this.setState(st => ({\n      dice: st.dice.map((d, i) =>\n        st.locked[i] ? d : Math.ceil(Math.random() * 6)\n      ),\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft - 1,\n      rolling: false,\n      availableJoker: st.bonusYahtzee ? this.getInitialState().availableJoker : st.availableJoker,\n      bonusYahtzee: false,\n      getsYahtzeeBonus: false,\n    }), () => { this.bonusYahtzee() });\n  }\n\n  toggleLocked(idx){\n    //toggle whether idx for dice is locked or not\n    if (this.state.rollsLeft && !this.state.rolling && !this.state.gameOver){\n      this.setState(st => ({\n        locked: [\n          ...st.locked.slice(0, idx),\n          !st.locked[idx],\n          ...st.locked.slice(idx + 1)\n        ]\n      }));\n    }\n  }\n\n  doScore(rulename, ruleFn){\n    //calculate the score for the rulename by calling a rule function\n    //when bonus yahtzee only allow specific ones to be scored and add bonus points if available\n    //\n    //pass two params instead of one to functions for fullHouse and both straights (different scoring for bonus yahtzee)\n    const ruleFnResult = [\"fullHouse\", \"smallStraight\",\"largeStraight\"].includes(rulename) \n    ? ruleFn(this.state.dice, this.state.bonusYahtzee) \n    : ruleFn(this.state.dice); \n    if(!this.state.rolling){\n      if( \n        (!this.state.bonusYahtzee && this.state.scores[rulename] === undefined) \n        || (this.state.bonusYahtzee && this.state.availableJoker[rulename]) \n      ) {\n        this.setState(st => ({\n          scores: { ...st.scores, [rulename]: ruleFnResult },\n          rollsLeft: NUM_ROLLS,\n          locked: Array(NUM_DICE).fill(false),\n          bonusYahtzeePoints: st.getsYahtzeeBonus ? st.bonusYahtzeePoints + 100 : st.bonusYahtzeePoints\n        }), () => { this.checkForUpperBonus() });\n      }\n    }\n  }\n\n  checkForUpperBonus(){\n    //set the upper bonus score when all upper section is filled\n    const bonusUpperNotSet = this.state.bonusUpperPoints === undefined;\n    const upperScores = Object.values(this.state.scores).slice(0,6);\n    const upperFilled = upperScores.every(score => score !== undefined);\n    if(bonusUpperNotSet && upperFilled){\n      const totalUpperScores = upperScores.reduce((total, curScore) => total + curScore);\n      this.setState({\n        bonusUpperPoints: totalUpperScores >= 63 ? 35 : 0\n      });\n      this.checkIfOver();\n    }\n    else { this.checkIfOver() }\n  }\n\n  displayRollInfo(){\n    const messages = [\n      \"0 Rolls Left\",\n      \"1 Roll Left\",\n      \"2 Rolls Left\",\n      \"Starting Roll\"\n    ];\n    return messages[this.state.rollsLeft];\n  }\n\n  bonusYahtzee(){\n    //check for rolled bonus yahtzee, set rule rows available for scoring it and determine if bonus points will be given\n  \tconst diceValues = this.state.dice;\n    const scores = this.state.scores;\n  \tconst allEqual = diceValues.every(v => v === diceValues[0]);\n\n  \tif(allEqual && scores.yahtzee !== undefined){\n  \t\tconst number = diceValues[0];\n  \t\tconst allScoreNames = Object.keys(scores);\n  \t\tconst scoreName = allScoreNames[number - 1];\n  \t\tif(scores[allScoreNames[number - 1]] === undefined){\n  \t\t\tthis.setState(st => ({\n  \t\t\t\tbonusYahtzee: true,\n  \t\t\t\tavailableJoker: { ...st.availableJoker, [scoreName]: true },\n          getsYahtzeeBonus: st.scores.yahtzee === 50 ? true : false\n  \t\t\t}));\n  \t\t}\n  \t\telse {\n  \t\t\tlet availableJoker = {...this.state.availableJoker};\n  \t\t\tconst lowerNames = allScoreNames.slice(6);\n  \t\t\tconst lowerAvailable = lowerNames.some(score => scores[score] === undefined);\n  \t\t\tif(lowerAvailable){\n  \t\t\t\tlowerNames.forEach(ls => {\n  \t\t\t\t\tif(scores[ls] === undefined) availableJoker[ls] = true;\n  \t\t\t\t});\n  \t\t\t\tthis.setState(st => ({\n  \t\t\t\t\tbonusYahtzee: true,\n  \t\t\t\t\tavailableJoker: availableJoker,\n            getsYahtzeeBonus: st.scores.yahtzee === 50 ? true : false\n  \t\t\t\t}));\n  \t\t\t}\n  \t\t\telse {\n  \t\t\t\tconst upperNames = allScoreNames.slice(0,6);\n  \t\t\t\tupperNames.forEach(ls => {\n  \t\t\t\t\tif(scores[ls] === undefined) availableJoker[ls] = true;\n  \t\t\t\t});\n  \t\t\t\tthis.setState(st => ({\n  \t\t\t\t\tbonusYahtzee: true,\n  \t\t\t\t\tavailableJoker: availableJoker,\n            getsYahtzeeBonus: st.scores.yahtzee === 50 ? true : false\n  \t\t\t\t}));\n  \t\t\t}\n  \t\t}\n  \t}\n  }\n\n  checkIfOver(){\n    //game over when whole scoretable is filled\n    const scoreBoardFull = Object.values(this.state.scores).every(s => s !== undefined);\n    if(scoreBoardFull){\n      this.setState({\n        gameOver: true,\n        bonusYahtzee: false,\n        locked: Array(NUM_DICE).fill(true)\n      });\n    }\n    else { \n      this.animateRoll(); \n    }\n  }\n\n\trender(){\n\t\tconst { dice, locked, rollsLeft, rolling, scores, bonusUpperPoints, \n            gameOver, bonusYahtzee, bonusYahtzeePoints, availableJoker } = this.state;\n\t\tconst classes = this.props.classes;\n    const buttonClasses = this.props.width === 'xs' ? clsx(classes.gameButton, classes.gameButtonXS) : classes.gameButton;\n\t\treturn (\n\t\t\t<Container maxWidth=\"sm\" className={classes.gameContainer}>\n        <Box component=\"header\" px=\"3rem\" className={classes.gameHeader}>\n          <Hidden xsUp={bonusYahtzee}>\n            <Typography variant=\"h2\" className={classes.gameTitle}>\n              Yahtzee!\n            </Typography>\n          </Hidden>\n          <Hidden xsUp={!bonusYahtzee}>\n            <Typography variant=\"h2\" className={clsx(classes.gameBonusTitle, \"bounceIn\")}>\n              BONUS!!!\n            </Typography>\n          </Hidden>\n          <Dice\n            dice={dice}\n            locked={locked}\n            handleClick={this.toggleLocked}\n            disabled={!rollsLeft || gameOver}\n            rolling={rolling}\n          />\n          <Hidden xsUp={gameOver} >\n            <Button \n            \tdisabled={locked.every(x => x) || rolling} \n            \tclassName={buttonClasses}\n            \tonClick={this.animateRoll}\n            >\n            \t{this.displayRollInfo()}\n            </Button>\n          </Hidden>             \n          <Hidden xsUp={!gameOver} >\n            <Button\n              className={buttonClasses} \n              style={{fontStyle: 'italic'}}\n              onClick={this.resetState}\n            >\n              PLAY AGAIN?\n            </Button>\n          </Hidden>\n        </Box>\n        <ScoreTable \n          doScore={this.doScore} \n          scores={scores} \n          bonusUpperPoints={bonusUpperPoints} \n          gameOver={gameOver} \n          bonusYahtzee={bonusYahtzee} \n          bonusYahtzeePoints={bonusYahtzeePoints} \n          availableJoker={availableJoker}\n        />\n      </Container>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(withWidth()(Game));","import React, { Component } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from \"@material-ui/core/\";\nimport Game from \"./Game\";\nimport './App.css';\n\nconst theme = createMuiTheme({\n  typography: {\n    h5: {\n      fontWeight: 300,\n      fontStyle: \"italic\",\n    },\n  }\n});\n\nclass App extends Component {\n  render (){\n    return (\n      <div className=\"App\">\n      \t<ThemeProvider theme={theme}>\n        \t<Game/>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}